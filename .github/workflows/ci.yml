name: CI pipeline -- build and test application

# Triger an event when:
#   1. Push is made to a dev branch
#   2. Pull Request is made to a dev branch
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    name: Build Application from Dockerfile
    runs-on: ubuntu-latest

    steps:
      # pulling code from repository
      - name: Checkout code
        uses: actions/checkout@v3

      # preparing an environment for Docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # installing python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # constructing a .env file from GitHub secrets
      # probably, there is a more elegant way to do this
      - name: Create .env file
        run: |
          cat <<EOF > .env
          DEVELOPMENT_SERVER_PORT=${{ secrets.DEVELOPMENT_SERVER_PORT }}
          MONGO_HOST=${{ secrets.MONGO_HOST }}
          MONGO_PORT=${{ secrets.MONGO_PORT }}
          MONGO_DB=${{ secrets.MONGO_DB }}
          MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}
          MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
          ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
          ALGORITHM=${{ secrets.ALGORITHM }}
          PRODUCTION_SERVER_PORT=${{ secrets.PRODUCTION_SERVER_PORT }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          SERVER_HOST=${{ secrets.SERVER_HOST }}
          EOF

      # installing docker-compose
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      # this one will run a full CI process from the Makefile:
      # building and running a container, then, running tests and shutting down a container
      - name: Run CI process
        run: sudo make ci
